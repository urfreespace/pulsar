"use strict";(self.webpackChunkwebsite_next=self.webpackChunkwebsite_next||[]).push([[19296],{3905:function(e,t,a){a.d(t,{Zo:function(){return s},kt:function(){return k}});var n=a(67294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var p=n.createContext({}),d=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},s=function(e){var t=d(e.components);return n.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,r=e.originalType,p=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),u=d(a),k=l,c=u["".concat(p,".").concat(k)]||u[k]||m[k]||r;return a?n.createElement(c,i(i({ref:t},s),{},{components:a})):n.createElement(c,i({ref:t},s))}));function k(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=a.length,i=new Array(r);i[0]=u;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:l,i[1]=o;for(var d=2;d<r;d++)i[d]=a[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},58215:function(e,t,a){var n=a(67294);t.Z=function(e){var t=e.children,a=e.hidden,l=e.className;return n.createElement("div",{role:"tabpanel",hidden:a,className:l},t)}},26396:function(e,t,a){a.d(t,{Z:function(){return u}});var n=a(87462),l=a(67294),r=a(72389),i=a(79443);var o=function(){var e=(0,l.useContext)(i.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},p=a(89521),d=a(86010),s="tabItem_vU9c";function m(e){var t,a,n,r=e.lazy,i=e.block,m=e.defaultValue,u=e.values,k=e.groupId,c=e.className,N=l.Children.map(e.children,(function(e){if((0,l.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),g=null!=u?u:N.map((function(e){var t=e.props;return{value:t.value,label:t.label}})),h=(0,p.lx)(g,(function(e,t){return e.value===t.value}));if(h.length>0)throw new Error('Docusaurus error: Duplicate values "'+h.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var b=null===m?m:null!=(t=null!=m?m:null==(a=N.find((function(e){return e.props.default})))?void 0:a.props.value)?t:null==(n=N[0])?void 0:n.props.value;if(null!==b&&!g.some((function(e){return e.value===b})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+b+'" but none of its children has the corresponding value. Available values are: '+g.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var y=o(),C=y.tabGroupChoices,v=y.setTabGroupChoices,f=(0,l.useState)(b),T=f[0],O=f[1],w=[],P=(0,p.o5)().blockElementScrollPositionUntilNextRender;if(null!=k){var D=C[k];null!=D&&D!==T&&g.some((function(e){return e.value===D}))&&O(D)}var E=function(e){var t=e.currentTarget,a=w.indexOf(t),n=g[a].value;n!==T&&(P(t),O(n),null!=k&&v(k,n))},U=function(e){var t,a=null;switch(e.key){case"ArrowRight":var n=w.indexOf(e.currentTarget)+1;a=w[n]||w[0];break;case"ArrowLeft":var l=w.indexOf(e.currentTarget)-1;a=w[l]||w[w.length-1]}null==(t=a)||t.focus()};return l.createElement("div",{className:"tabs-container"},l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,d.Z)("tabs",{"tabs--block":i},c)},g.map((function(e){var t=e.value,a=e.label;return l.createElement("li",{role:"tab",tabIndex:T===t?0:-1,"aria-selected":T===t,className:(0,d.Z)("tabs__item",s,{"tabs__item--active":T===t}),key:t,ref:function(e){return w.push(e)},onKeyDown:U,onFocus:E,onClick:E},null!=a?a:t)}))),r?(0,l.cloneElement)(N.filter((function(e){return e.props.value===T}))[0],{className:"margin-vert--md"}):l.createElement("div",{className:"margin-vert--md"},N.map((function(e,t){return(0,l.cloneElement)(e,{key:t,hidden:e.props.value!==T})}))))}function u(e){var t=(0,r.Z)();return l.createElement(m,(0,n.Z)({key:String(t)},e))}},79443:function(e,t,a){var n=(0,a(67294).createContext)(void 0);t.Z=n},58193:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return o},contentTitle:function(){return p},metadata:function(){return d},toc:function(){return s},default:function(){return u}});var n=a(87462),l=a(63366),r=(a(67294),a(3905)),i=(a(26396),a(58215),["components"]),o={id:"io-cli",title:"Connector Admin CLI",sidebar_label:"CLI",original_id:"io-cli"},p=void 0,d={unversionedId:"io-cli",id:"version-2.7.0/io-cli",isDocsHomePage:!1,title:"Connector Admin CLI",description:"The pulsar-admin tool helps you manage Pulsar connectors.",source:"@site/versioned_docs/version-2.7.0/io-cli.md",sourceDirName:".",slug:"/io-cli",permalink:"/docs/2.7.0/io-cli",editUrl:"https://github.com/apache/pulsar/edit/master/site2/website-next/versioned_docs/version-2.7.0/io-cli.md",tags:[],version:"2.7.0",frontMatter:{id:"io-cli",title:"Connector Admin CLI",sidebar_label:"CLI",original_id:"io-cli"},sidebar:"version-2.7.0/docsSidebar",previous:{title:"Develop",permalink:"/docs/2.7.0/io-develop"},next:{title:"Overview",permalink:"/docs/2.7.0/sql-overview"}},s=[{value:"<code>sources</code>",id:"sources",children:[{value:"<code>create</code>",id:"create",children:[{value:"Usage",id:"usage",children:[],level:4},{value:"Options",id:"options",children:[],level:4}],level:3},{value:"<code>update</code>",id:"update",children:[{value:"Usage",id:"usage-1",children:[],level:4},{value:"Options",id:"options-1",children:[],level:4}],level:3},{value:"<code>delete</code>",id:"delete",children:[{value:"Usage",id:"usage-2",children:[],level:4},{value:"Option",id:"option",children:[],level:4}],level:3},{value:"<code>get</code>",id:"get",children:[{value:"Usage",id:"usage-3",children:[],level:4},{value:"Options",id:"options-2",children:[],level:4}],level:3},{value:"<code>status</code>",id:"status",children:[{value:"Usage",id:"usage-4",children:[],level:4},{value:"Options",id:"options-3",children:[],level:4}],level:3},{value:"<code>list</code>",id:"list",children:[{value:"Usage",id:"usage-5",children:[],level:4},{value:"Options",id:"options-4",children:[],level:4}],level:3},{value:"<code>stop</code>",id:"stop",children:[{value:"Usage",id:"usage-6",children:[],level:4},{value:"Options",id:"options-5",children:[],level:4}],level:3},{value:"<code>start</code>",id:"start",children:[{value:"Usage",id:"usage-7",children:[],level:4},{value:"Options",id:"options-6",children:[],level:4}],level:3},{value:"<code>restart</code>",id:"restart",children:[{value:"Usage",id:"usage-8",children:[],level:4},{value:"Options",id:"options-7",children:[],level:4}],level:3},{value:"<code>localrun</code>",id:"localrun",children:[{value:"Usage",id:"usage-9",children:[],level:4},{value:"Options",id:"options-8",children:[],level:4}],level:3},{value:"<code>available-sources</code>",id:"available-sources",children:[{value:"Usage",id:"usage-10",children:[],level:4}],level:3},{value:"<code>reload</code>",id:"reload",children:[{value:"Usage",id:"usage-11",children:[],level:4}],level:3}],level:2},{value:"<code>sinks</code>",id:"sinks",children:[{value:"<code>create</code>",id:"create-1",children:[{value:"Usage",id:"usage-12",children:[],level:4},{value:"Options",id:"options-9",children:[],level:4}],level:3},{value:"<code>update</code>",id:"update-1",children:[{value:"Usage",id:"usage-13",children:[],level:4},{value:"Options",id:"options-10",children:[],level:4}],level:3},{value:"<code>delete</code>",id:"delete-1",children:[{value:"Usage",id:"usage-14",children:[],level:4},{value:"Option",id:"option-1",children:[],level:4}],level:3},{value:"<code>get</code>",id:"get-1",children:[{value:"Usage",id:"usage-15",children:[],level:4},{value:"Options",id:"options-11",children:[],level:4}],level:3},{value:"<code>status</code>",id:"status-1",children:[{value:"Usage",id:"usage-16",children:[],level:4},{value:"Options",id:"options-12",children:[],level:4}],level:3},{value:"<code>list</code>",id:"list-1",children:[{value:"Usage",id:"usage-17",children:[],level:4},{value:"Options",id:"options-13",children:[],level:4}],level:3},{value:"<code>stop</code>",id:"stop-1",children:[{value:"Usage",id:"usage-18",children:[],level:4},{value:"Options",id:"options-14",children:[],level:4}],level:3},{value:"<code>start</code>",id:"start-1",children:[{value:"Usage",id:"usage-19",children:[],level:4},{value:"Options",id:"options-15",children:[],level:4}],level:3},{value:"<code>restart</code>",id:"restart-1",children:[{value:"Usage",id:"usage-20",children:[],level:4},{value:"Options",id:"options-16",children:[],level:4}],level:3},{value:"<code>localrun</code>",id:"localrun-1",children:[{value:"Usage",id:"usage-21",children:[],level:4},{value:"Options",id:"options-17",children:[],level:4}],level:3},{value:"<code>available-sinks</code>",id:"available-sinks",children:[{value:"Usage",id:"usage-22",children:[],level:4}],level:3},{value:"<code>reload</code>",id:"reload-1",children:[{value:"Usage",id:"usage-23",children:[],level:4}],level:3}],level:2}],m={toc:s};function u(e){var t=e.components,a=(0,l.Z)(e,i);return(0,r.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"pulsar-admin")," tool helps you manage Pulsar connectors."),(0,r.kt)("h2",{id:"sources"},(0,r.kt)("inlineCode",{parentName:"h2"},"sources")),(0,r.kt)("p",null,"An interface for managing Pulsar IO sources (ingress data into Pulsar)."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sources subcommands\n\n")),(0,r.kt)("p",null,"Subcommands are:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"create"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"update"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"delete"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"get"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"status"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"list"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"stop"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"start"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"restart"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"localrun"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"available-sources"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"reload")))),(0,r.kt)("h3",{id:"create"},(0,r.kt)("inlineCode",{parentName:"h3"},"create")),(0,r.kt)("p",null,"Submit a Pulsar IO source connector to run in a Pulsar cluster."),(0,r.kt)("h4",{id:"usage"},"Usage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sources create options\n\n")),(0,r.kt)("h4",{id:"options"},"Options"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Flag"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-a"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"--archive")),(0,r.kt)("td",{parentName:"tr",align:null},"The path to the NAR archive for the source. ",(0,r.kt)("br",null)," It also supports url-path (http/https/file ","[file protocol assumes that file already exists on worker host]",") from which worker can download the package.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--classname")),(0,r.kt)("td",{parentName:"tr",align:null},"The source's class name if ",(0,r.kt)("inlineCode",{parentName:"td"},"archive")," is file-url-path (file://).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--cpu")),(0,r.kt)("td",{parentName:"tr",align:null},"The CPU (in cores) that needs to be allocated per source instance (applicable only to Docker runtime).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--deserialization-classname")),(0,r.kt)("td",{parentName:"tr",align:null},"The SerDe classname for the source.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--destination-topic-name")),(0,r.kt)("td",{parentName:"tr",align:null},"The Pulsar topic to which data is sent.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--disk")),(0,r.kt)("td",{parentName:"tr",align:null},"The disk (in bytes) that needs to be allocated per source instance (applicable only to Docker runtime).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--name")),(0,r.kt)("td",{parentName:"tr",align:null},"The source's name.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--namespace")),(0,r.kt)("td",{parentName:"tr",align:null},"The source's namespace.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"}," --parallelism")),(0,r.kt)("td",{parentName:"tr",align:null},"The source's parallelism factor, that is, the number of source instances to run.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--processing-guarantees")),(0,r.kt)("td",{parentName:"tr",align:null},"The processing guarantees (also named as delivery semantics) applied to the source. A source connector receives messages from external system and writes messages to a Pulsar topic. The ",(0,r.kt)("inlineCode",{parentName:"td"},"--processing-guarantees")," is used to ensure the processing guarantees for writing messages to the Pulsar topic. ",(0,r.kt)("br",null),"The available values are ATLEAST_ONCE, ATMOST_ONCE, EFFECTIVELY_ONCE.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--ram")),(0,r.kt)("td",{parentName:"tr",align:null},"The RAM (in bytes) that needs to be allocated per source instance (applicable only to the process and Docker runtimes).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-st"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"--schema-type")),(0,r.kt)("td",{parentName:"tr",align:null},"The schema type.",(0,r.kt)("br",null)," Either a builtin schema (for example, AVRO and JSON) or custom schema class name to be used to encode messages emitted from source.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--source-config")),(0,r.kt)("td",{parentName:"tr",align:null},"Source config key/values.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--source-config-file")),(0,r.kt)("td",{parentName:"tr",align:null},"The path to a YAML config file specifying the source's configuration.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-t"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"--source-type")),(0,r.kt)("td",{parentName:"tr",align:null},"The source's connector provider.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--tenant")),(0,r.kt)("td",{parentName:"tr",align:null},"The source's tenant.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--producer-config")),(0,r.kt)("td",{parentName:"tr",align:null},"The custom producer configuration (as a JSON string).")))),(0,r.kt)("h3",{id:"update"},(0,r.kt)("inlineCode",{parentName:"h3"},"update")),(0,r.kt)("p",null,"Update a already submitted Pulsar IO source connector."),(0,r.kt)("h4",{id:"usage-1"},"Usage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sources update options\n\n")),(0,r.kt)("h4",{id:"options-1"},"Options"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Flag"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-a"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"--archive")),(0,r.kt)("td",{parentName:"tr",align:null},"The path to the NAR archive for the source. ",(0,r.kt)("br",null)," It also supports url-path (http/https/file ","[file protocol assumes that file already exists on worker host]",") from which worker can download the package.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--classname")),(0,r.kt)("td",{parentName:"tr",align:null},"The source's class name if ",(0,r.kt)("inlineCode",{parentName:"td"},"archive")," is file-url-path (file://).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--cpu")),(0,r.kt)("td",{parentName:"tr",align:null},"The CPU (in cores) that needs to be allocated per source instance (applicable only to Docker runtime).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--deserialization-classname")),(0,r.kt)("td",{parentName:"tr",align:null},"The SerDe classname for the source.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--destination-topic-name")),(0,r.kt)("td",{parentName:"tr",align:null},"The Pulsar topic to which data is sent.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--disk")),(0,r.kt)("td",{parentName:"tr",align:null},"The disk (in bytes) that needs to be allocated per source instance (applicable only to Docker runtime).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--name")),(0,r.kt)("td",{parentName:"tr",align:null},"The source's name.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--namespace")),(0,r.kt)("td",{parentName:"tr",align:null},"The source's namespace.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"}," --parallelism")),(0,r.kt)("td",{parentName:"tr",align:null},"The source's parallelism factor, that is, the number of source instances to run.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--processing-guarantees")),(0,r.kt)("td",{parentName:"tr",align:null},"The processing guarantees (also named as delivery semantics) applied to the source. A source connector receives messages from external system and writes messages to a Pulsar topic. The ",(0,r.kt)("inlineCode",{parentName:"td"},"--processing-guarantees")," is used to ensure the processing guarantees for writing messages to the Pulsar topic. ",(0,r.kt)("br",null),"The available values are ATLEAST_ONCE, ATMOST_ONCE, EFFECTIVELY_ONCE.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--ram")),(0,r.kt)("td",{parentName:"tr",align:null},"The RAM (in bytes) that needs to be allocated per source instance (applicable only to the process and Docker runtimes).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-st"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"--schema-type")),(0,r.kt)("td",{parentName:"tr",align:null},"The schema type.",(0,r.kt)("br",null)," Either a builtin schema (for example, AVRO and JSON) or custom schema class name to be used to encode messages emitted from source.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--source-config")),(0,r.kt)("td",{parentName:"tr",align:null},"Source config key/values.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--source-config-file")),(0,r.kt)("td",{parentName:"tr",align:null},"The path to a YAML config file specifying the source's configuration.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-t"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"--source-type")),(0,r.kt)("td",{parentName:"tr",align:null},"The source's connector provider. The ",(0,r.kt)("inlineCode",{parentName:"td"},"source-type")," parameter of the currently built-in connectors is determined by the setting of the ",(0,r.kt)("inlineCode",{parentName:"td"},"name")," parameter specified in the pulsar-io.yaml file.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--tenant")),(0,r.kt)("td",{parentName:"tr",align:null},"The source's tenant.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--update-auth-data")),(0,r.kt)("td",{parentName:"tr",align:null},"Whether or not to update the auth data.",(0,r.kt)("br",null),(0,r.kt)("strong",{parentName:"td"},"Default value: false."))))),(0,r.kt)("h3",{id:"delete"},(0,r.kt)("inlineCode",{parentName:"h3"},"delete")),(0,r.kt)("p",null,"Delete a Pulsar IO source connector."),(0,r.kt)("h4",{id:"usage-2"},"Usage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sources delete options\n\n")),(0,r.kt)("h4",{id:"option"},"Option"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Flag"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--name")),(0,r.kt)("td",{parentName:"tr",align:null},"The source's name.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--namespace")),(0,r.kt)("td",{parentName:"tr",align:null},"The source's namespace.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--tenant")),(0,r.kt)("td",{parentName:"tr",align:null},"The source's tenant.")))),(0,r.kt)("h3",{id:"get"},(0,r.kt)("inlineCode",{parentName:"h3"},"get")),(0,r.kt)("p",null,"Get the information about a Pulsar IO source connector."),(0,r.kt)("h4",{id:"usage-3"},"Usage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sources get options\n\n")),(0,r.kt)("h4",{id:"options-2"},"Options"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Flag"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--name")),(0,r.kt)("td",{parentName:"tr",align:null},"The source's name.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--namespace")),(0,r.kt)("td",{parentName:"tr",align:null},"The source's namespace.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--tenant")),(0,r.kt)("td",{parentName:"tr",align:null},"The source's tenant.")))),(0,r.kt)("h3",{id:"status"},(0,r.kt)("inlineCode",{parentName:"h3"},"status")),(0,r.kt)("p",null,"Check the current status of a Pulsar Source."),(0,r.kt)("h4",{id:"usage-4"},"Usage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sources status options\n\n")),(0,r.kt)("h4",{id:"options-3"},"Options"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Flag"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--instance-id")),(0,r.kt)("td",{parentName:"tr",align:null},"The source ID.",(0,r.kt)("br",null),"If ",(0,r.kt)("inlineCode",{parentName:"td"},"instance-id")," is not provided, Pulasr gets status of all instances.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--name")),(0,r.kt)("td",{parentName:"tr",align:null},"The source's name.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--namespace")),(0,r.kt)("td",{parentName:"tr",align:null},"The source's namespace.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--tenant")),(0,r.kt)("td",{parentName:"tr",align:null},"The source's tenant.")))),(0,r.kt)("h3",{id:"list"},(0,r.kt)("inlineCode",{parentName:"h3"},"list")),(0,r.kt)("p",null,"List all running Pulsar IO source connectors."),(0,r.kt)("h4",{id:"usage-5"},"Usage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sources list options\n\n")),(0,r.kt)("h4",{id:"options-4"},"Options"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Flag"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--namespace")),(0,r.kt)("td",{parentName:"tr",align:null},"The source's namespace.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--tenant")),(0,r.kt)("td",{parentName:"tr",align:null},"The source's tenant.")))),(0,r.kt)("h3",{id:"stop"},(0,r.kt)("inlineCode",{parentName:"h3"},"stop")),(0,r.kt)("p",null,"Stop a source instance."),(0,r.kt)("h4",{id:"usage-6"},"Usage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sources stop options\n\n")),(0,r.kt)("h4",{id:"options-5"},"Options"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Flag"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--instance-id")),(0,r.kt)("td",{parentName:"tr",align:null},"The source instanceID.",(0,r.kt)("br",null),"If ",(0,r.kt)("inlineCode",{parentName:"td"},"instance-id")," is not provided, Pulsar stops all instances.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--name")),(0,r.kt)("td",{parentName:"tr",align:null},"The source's name.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--namespace")),(0,r.kt)("td",{parentName:"tr",align:null},"The source's namespace.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--tenant")),(0,r.kt)("td",{parentName:"tr",align:null},"The source's tenant.")))),(0,r.kt)("h3",{id:"start"},(0,r.kt)("inlineCode",{parentName:"h3"},"start")),(0,r.kt)("p",null,"Start a source instance."),(0,r.kt)("h4",{id:"usage-7"},"Usage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sources start options\n\n")),(0,r.kt)("h4",{id:"options-6"},"Options"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Flag"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--instance-id")),(0,r.kt)("td",{parentName:"tr",align:null},"The source instanceID.",(0,r.kt)("br",null),"If ",(0,r.kt)("inlineCode",{parentName:"td"},"instance-id")," is not provided, Pulsar starts all instances.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--name")),(0,r.kt)("td",{parentName:"tr",align:null},"The source's name.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--namespace")),(0,r.kt)("td",{parentName:"tr",align:null},"The source's namespace.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--tenant")),(0,r.kt)("td",{parentName:"tr",align:null},"The source's tenant.")))),(0,r.kt)("h3",{id:"restart"},(0,r.kt)("inlineCode",{parentName:"h3"},"restart")),(0,r.kt)("p",null,"Restart a source instance."),(0,r.kt)("h4",{id:"usage-8"},"Usage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sources restart options\n\n")),(0,r.kt)("h4",{id:"options-7"},"Options"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Flag"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--instance-id")),(0,r.kt)("td",{parentName:"tr",align:null},"The source instanceID.",(0,r.kt)("br",null),"If ",(0,r.kt)("inlineCode",{parentName:"td"},"instance-id")," is not provided, Pulsar restarts all instances.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--name")),(0,r.kt)("td",{parentName:"tr",align:null},"The source's name.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--namespace")),(0,r.kt)("td",{parentName:"tr",align:null},"The source's namespace.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--tenant")),(0,r.kt)("td",{parentName:"tr",align:null},"The source's tenant.")))),(0,r.kt)("h3",{id:"localrun"},(0,r.kt)("inlineCode",{parentName:"h3"},"localrun")),(0,r.kt)("p",null,"Run a Pulsar IO source connector locally rather than deploying it to the Pulsar cluster."),(0,r.kt)("h4",{id:"usage-9"},"Usage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sources localrun options\n\n")),(0,r.kt)("h4",{id:"options-8"},"Options"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Flag"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-a"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"--archive")),(0,r.kt)("td",{parentName:"tr",align:null},"The path to the NAR archive for the Source. ",(0,r.kt)("br",null)," It also supports url-path (http/https/file ","[file protocol assumes that file already exists on worker host]",") from which worker can download the package.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--broker-service-url")),(0,r.kt)("td",{parentName:"tr",align:null},"The URL for the Pulsar broker.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--classname")),(0,r.kt)("td",{parentName:"tr",align:null},"The source's class name if ",(0,r.kt)("inlineCode",{parentName:"td"},"archive")," is file-url-path (file://).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--client-auth-params")),(0,r.kt)("td",{parentName:"tr",align:null},"Client authentication parameter.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--client-auth-plugin")),(0,r.kt)("td",{parentName:"tr",align:null},"Client authentication plugin using which function-process can connect to broker.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--cpu")),(0,r.kt)("td",{parentName:"tr",align:null},"The CPU (in cores) that needs to be allocated per source instance (applicable only to the Docker runtime).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--deserialization-classname")),(0,r.kt)("td",{parentName:"tr",align:null},"The SerDe classname for the source.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--destination-topic-name")),(0,r.kt)("td",{parentName:"tr",align:null},"The Pulsar topic to which data is sent.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--disk")),(0,r.kt)("td",{parentName:"tr",align:null},"The disk (in bytes) that needs to be allocated per source instance (applicable only to the Docker runtime).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--hostname-verification-enabled")),(0,r.kt)("td",{parentName:"tr",align:null},"Enable hostname verification.",(0,r.kt)("br",null),(0,r.kt)("strong",{parentName:"td"},"Default value: false"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--name")),(0,r.kt)("td",{parentName:"tr",align:null},"The source\u2019s name.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--namespace")),(0,r.kt)("td",{parentName:"tr",align:null},"The source\u2019s namespace.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--parallelism")),(0,r.kt)("td",{parentName:"tr",align:null},"The source\u2019s parallelism factor, that is, the number of source instances to run).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--processing-guarantees")),(0,r.kt)("td",{parentName:"tr",align:null},"The processing guarantees (also named as delivery semantics) applied to the source. A source connector receives messages from external system and writes messages to a Pulsar topic. The ",(0,r.kt)("inlineCode",{parentName:"td"},"--processing-guarantees")," is used to ensure the processing guarantees for writing messages to the Pulsar topic. ",(0,r.kt)("br",null),"The available values are ATLEAST_ONCE, ATMOST_ONCE, EFFECTIVELY_ONCE.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--ram")),(0,r.kt)("td",{parentName:"tr",align:null},"The RAM (in bytes) that needs to be allocated per source instance (applicable only to the Docker runtime).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-st"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"--schema-type")),(0,r.kt)("td",{parentName:"tr",align:null},"The schema type.",(0,r.kt)("br",null)," Either a builtin schema (for example, AVRO and JSON) or custom schema class name to be used to encode messages emitted from source.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--source-config")),(0,r.kt)("td",{parentName:"tr",align:null},"Source config key/values.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--source-config-file")),(0,r.kt)("td",{parentName:"tr",align:null},"The path to a YAML config file specifying the source\u2019s configuration.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--source-type")),(0,r.kt)("td",{parentName:"tr",align:null},"The source's connector provider.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--tenant")),(0,r.kt)("td",{parentName:"tr",align:null},"The source\u2019s tenant.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--tls-allow-insecure")),(0,r.kt)("td",{parentName:"tr",align:null},"Allow insecure tls connection.",(0,r.kt)("br",null),(0,r.kt)("strong",{parentName:"td"},"Default value: false"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--tls-trust-cert-path")),(0,r.kt)("td",{parentName:"tr",align:null},"The tls trust cert file path.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--use-tls")),(0,r.kt)("td",{parentName:"tr",align:null},"Use tls connection.",(0,r.kt)("br",null),(0,r.kt)("strong",{parentName:"td"},"Default value: false"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--producer-config")),(0,r.kt)("td",{parentName:"tr",align:null},"The custom producer configuration (as a JSON string).")))),(0,r.kt)("h3",{id:"available-sources"},(0,r.kt)("inlineCode",{parentName:"h3"},"available-sources")),(0,r.kt)("p",null,"Get the list of Pulsar IO connector sources supported by Pulsar cluster."),(0,r.kt)("h4",{id:"usage-10"},"Usage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sources available-sources\n\n")),(0,r.kt)("h3",{id:"reload"},(0,r.kt)("inlineCode",{parentName:"h3"},"reload")),(0,r.kt)("p",null,"Reload the available built-in connectors."),(0,r.kt)("h4",{id:"usage-11"},"Usage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sources reload\n\n")),(0,r.kt)("h2",{id:"sinks"},(0,r.kt)("inlineCode",{parentName:"h2"},"sinks")),(0,r.kt)("p",null,"An interface for managing Pulsar IO sinks (egress data from Pulsar)."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sinks subcommands\n\n")),(0,r.kt)("p",null,"Subcommands are:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"create"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"update"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"delete"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"get"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"status"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"list"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"stop"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"start"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"restart"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"localrun"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"available-sinks"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"reload")))),(0,r.kt)("h3",{id:"create-1"},(0,r.kt)("inlineCode",{parentName:"h3"},"create")),(0,r.kt)("p",null,"Submit a Pulsar IO sink connector to run in a Pulsar cluster."),(0,r.kt)("h4",{id:"usage-12"},"Usage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sinks create options\n\n")),(0,r.kt)("h4",{id:"options-9"},"Options"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Flag"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-a"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"--archive")),(0,r.kt)("td",{parentName:"tr",align:null},"The path to the archive file for the sink. ",(0,r.kt)("br",null)," It also supports url-path (http/https/file ","[file protocol assumes that file already exists on worker host]",") from which worker can download the package.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--auto-ack")),(0,r.kt)("td",{parentName:"tr",align:null},"Whether or not the framework will automatically acknowledge messages.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--classname")),(0,r.kt)("td",{parentName:"tr",align:null},"The sink's class name if ",(0,r.kt)("inlineCode",{parentName:"td"},"archive")," is file-url-path (file://).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--cpu")),(0,r.kt)("td",{parentName:"tr",align:null},"The CPU (in cores) that needs to be allocated per sink instance (applicable only to Docker runtime).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--custom-schema-inputs")),(0,r.kt)("td",{parentName:"tr",align:null},"The map of input topics to schema types or class names (as a JSON string).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--custom-serde-inputs")),(0,r.kt)("td",{parentName:"tr",align:null},"The map of input topics to SerDe class names (as a JSON string).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--disk")),(0,r.kt)("td",{parentName:"tr",align:null},"The disk (in bytes) that needs to be allocated per sink instance (applicable only to Docker runtime).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-i, --inputs")),(0,r.kt)("td",{parentName:"tr",align:null},"The sink's input topic or topics (multiple topics can be specified as a comma-separated list).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--name")),(0,r.kt)("td",{parentName:"tr",align:null},"The sink's name.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--namespace")),(0,r.kt)("td",{parentName:"tr",align:null},"The sink's namespace.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"}," --parallelism")),(0,r.kt)("td",{parentName:"tr",align:null},"The sink's parallelism factor, that is, the number of sink instances to run.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--processing-guarantees")),(0,r.kt)("td",{parentName:"tr",align:null},"The processing guarantees (also known as delivery semantics) applied to the sink. The ",(0,r.kt)("inlineCode",{parentName:"td"},"--processing-guarantees")," implementation in Pulsar also relies on sink implementation. ",(0,r.kt)("br",null),"The available values are ATLEAST_ONCE, ATMOST_ONCE, EFFECTIVELY_ONCE.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--ram")),(0,r.kt)("td",{parentName:"tr",align:null},"The RAM (in bytes) that needs to be allocated per sink instance (applicable only to the process and Docker runtimes).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--retain-ordering")),(0,r.kt)("td",{parentName:"tr",align:null},"Sink consumes and sinks messages in order.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--sink-config")),(0,r.kt)("td",{parentName:"tr",align:null},"sink config key/values.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--sink-config-file")),(0,r.kt)("td",{parentName:"tr",align:null},"The path to a YAML config file specifying the sink's configuration.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-t"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"--sink-type")),(0,r.kt)("td",{parentName:"tr",align:null},"The sink's connector provider. The ",(0,r.kt)("inlineCode",{parentName:"td"},"sink-type")," parameter of the currently built-in connectors is determined by the setting of the ",(0,r.kt)("inlineCode",{parentName:"td"},"name")," parameter specified in the pulsar-io.yaml file.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--subs-name")),(0,r.kt)("td",{parentName:"tr",align:null},"Pulsar source subscription name if user wants a specific subscription-name for input-topic consumer.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--tenant")),(0,r.kt)("td",{parentName:"tr",align:null},"The sink's tenant.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--timeout-ms")),(0,r.kt)("td",{parentName:"tr",align:null},"The message timeout in milliseconds.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--topics-pattern")),(0,r.kt)("td",{parentName:"tr",align:null},"TopicsPattern to consume from list of topics under a namespace that match the pattern. ",(0,r.kt)("br",null),(0,r.kt)("inlineCode",{parentName:"td"},"--input")," and ",(0,r.kt)("inlineCode",{parentName:"td"},"--topics-Pattern")," are mutually exclusive. ",(0,r.kt)("br",null),"Add SerDe class name for a pattern in ",(0,r.kt)("inlineCode",{parentName:"td"},"--customSerdeInputs")," (supported for java fun only).")))),(0,r.kt)("h3",{id:"update-1"},(0,r.kt)("inlineCode",{parentName:"h3"},"update")),(0,r.kt)("p",null,"Update a Pulsar IO sink connector."),(0,r.kt)("h4",{id:"usage-13"},"Usage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sinks update options\n\n")),(0,r.kt)("h4",{id:"options-10"},"Options"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Flag"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-a"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"--archive")),(0,r.kt)("td",{parentName:"tr",align:null},"The path to the archive file for the sink. ",(0,r.kt)("br",null)," It also supports url-path (http/https/file ","[file protocol assumes that file already exists on worker host]",") from which worker can download the package.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--auto-ack")),(0,r.kt)("td",{parentName:"tr",align:null},"Whether or not the framework will automatically acknowledge messages.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--classname")),(0,r.kt)("td",{parentName:"tr",align:null},"The sink's class name if ",(0,r.kt)("inlineCode",{parentName:"td"},"archive")," is file-url-path (file://).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--cpu")),(0,r.kt)("td",{parentName:"tr",align:null},"The CPU (in cores) that needs to be allocated per sink instance (applicable only to Docker runtime).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--custom-schema-inputs")),(0,r.kt)("td",{parentName:"tr",align:null},"The map of input topics to schema types or class names (as a JSON string).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--custom-serde-inputs")),(0,r.kt)("td",{parentName:"tr",align:null},"The map of input topics to SerDe class names (as a JSON string).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--disk")),(0,r.kt)("td",{parentName:"tr",align:null},"The disk (in bytes) that needs to be allocated per sink instance (applicable only to Docker runtime).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-i, --inputs")),(0,r.kt)("td",{parentName:"tr",align:null},"The sink's input topic or topics (multiple topics can be specified as a comma-separated list).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--name")),(0,r.kt)("td",{parentName:"tr",align:null},"The sink's name.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--namespace")),(0,r.kt)("td",{parentName:"tr",align:null},"The sink's namespace.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"}," --parallelism")),(0,r.kt)("td",{parentName:"tr",align:null},"The sink's parallelism factor, that is, the number of sink instances to run.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--processing-guarantees")),(0,r.kt)("td",{parentName:"tr",align:null},"The processing guarantees (also known as delivery semantics) applied to the sink. The ",(0,r.kt)("inlineCode",{parentName:"td"},"--processing-guarantees")," implementation in Pulsar also relies on sink implementation. ",(0,r.kt)("br",null),"The available values are ATLEAST_ONCE, ATMOST_ONCE, EFFECTIVELY_ONCE.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--ram")),(0,r.kt)("td",{parentName:"tr",align:null},"The RAM (in bytes) that needs to be allocated per sink instance (applicable only to the process and Docker runtimes).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--retain-ordering")),(0,r.kt)("td",{parentName:"tr",align:null},"Sink consumes and sinks messages in order.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--sink-config")),(0,r.kt)("td",{parentName:"tr",align:null},"sink config key/values.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--sink-config-file")),(0,r.kt)("td",{parentName:"tr",align:null},"The path to a YAML config file specifying the sink's configuration.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-t"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"--sink-type")),(0,r.kt)("td",{parentName:"tr",align:null},"The sink's connector provider.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--subs-name")),(0,r.kt)("td",{parentName:"tr",align:null},"Pulsar source subscription name if user wants a specific subscription-name for input-topic consumer.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--tenant")),(0,r.kt)("td",{parentName:"tr",align:null},"The sink's tenant.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--timeout-ms")),(0,r.kt)("td",{parentName:"tr",align:null},"The message timeout in milliseconds.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--topics-pattern")),(0,r.kt)("td",{parentName:"tr",align:null},"TopicsPattern to consume from list of topics under a namespace that match the pattern. ",(0,r.kt)("br",null),(0,r.kt)("inlineCode",{parentName:"td"},"--input")," and ",(0,r.kt)("inlineCode",{parentName:"td"},"--topics-Pattern")," are mutually exclusive. ",(0,r.kt)("br",null),"Add SerDe class name for a pattern in ",(0,r.kt)("inlineCode",{parentName:"td"},"--customSerdeInputs")," (supported for java fun only).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--update-auth-data")),(0,r.kt)("td",{parentName:"tr",align:null},"Whether or not to update the auth data.",(0,r.kt)("br",null),(0,r.kt)("strong",{parentName:"td"},"Default value: false."))))),(0,r.kt)("h3",{id:"delete-1"},(0,r.kt)("inlineCode",{parentName:"h3"},"delete")),(0,r.kt)("p",null,"Delete a Pulsar IO sink connector."),(0,r.kt)("h4",{id:"usage-14"},"Usage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sinks delete options\n\n")),(0,r.kt)("h4",{id:"option-1"},"Option"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Flag"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--name")),(0,r.kt)("td",{parentName:"tr",align:null},"The sink's name.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--namespace")),(0,r.kt)("td",{parentName:"tr",align:null},"The sink's namespace.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--tenant")),(0,r.kt)("td",{parentName:"tr",align:null},"The sink's tenant.")))),(0,r.kt)("h3",{id:"get-1"},(0,r.kt)("inlineCode",{parentName:"h3"},"get")),(0,r.kt)("p",null,"Get the information about a Pulsar IO sink connector."),(0,r.kt)("h4",{id:"usage-15"},"Usage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sinks get options\n\n")),(0,r.kt)("h4",{id:"options-11"},"Options"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Flag"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--name")),(0,r.kt)("td",{parentName:"tr",align:null},"The sink's name.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--namespace")),(0,r.kt)("td",{parentName:"tr",align:null},"The sink's namespace.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--tenant")),(0,r.kt)("td",{parentName:"tr",align:null},"The sink's tenant.")))),(0,r.kt)("h3",{id:"status-1"},(0,r.kt)("inlineCode",{parentName:"h3"},"status")),(0,r.kt)("p",null,"Check the current status of a Pulsar sink."),(0,r.kt)("h4",{id:"usage-16"},"Usage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sinks status options\n\n")),(0,r.kt)("h4",{id:"options-12"},"Options"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Flag"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--instance-id")),(0,r.kt)("td",{parentName:"tr",align:null},"The sink ID.",(0,r.kt)("br",null),"If ",(0,r.kt)("inlineCode",{parentName:"td"},"instance-id")," is not provided, Pulasr gets status of all instances.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--name")),(0,r.kt)("td",{parentName:"tr",align:null},"The sink's name.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--namespace")),(0,r.kt)("td",{parentName:"tr",align:null},"The sink's namespace.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--tenant")),(0,r.kt)("td",{parentName:"tr",align:null},"The sink's tenant.")))),(0,r.kt)("h3",{id:"list-1"},(0,r.kt)("inlineCode",{parentName:"h3"},"list")),(0,r.kt)("p",null,"List all running Pulsar IO sink connectors."),(0,r.kt)("h4",{id:"usage-17"},"Usage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sinks list options\n\n")),(0,r.kt)("h4",{id:"options-13"},"Options"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Flag"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--namespace")),(0,r.kt)("td",{parentName:"tr",align:null},"The sink's namespace.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--tenant")),(0,r.kt)("td",{parentName:"tr",align:null},"The sink's tenant.")))),(0,r.kt)("h3",{id:"stop-1"},(0,r.kt)("inlineCode",{parentName:"h3"},"stop")),(0,r.kt)("p",null,"Stop a sink instance."),(0,r.kt)("h4",{id:"usage-18"},"Usage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sinks stop options\n\n")),(0,r.kt)("h4",{id:"options-14"},"Options"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Flag"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--instance-id")),(0,r.kt)("td",{parentName:"tr",align:null},"The sink instanceID.",(0,r.kt)("br",null),"If ",(0,r.kt)("inlineCode",{parentName:"td"},"instance-id")," is not provided, Pulsar stops all instances.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--name")),(0,r.kt)("td",{parentName:"tr",align:null},"The sink's name.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--namespace")),(0,r.kt)("td",{parentName:"tr",align:null},"The sink's namespace.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--tenant")),(0,r.kt)("td",{parentName:"tr",align:null},"The sink's tenant.")))),(0,r.kt)("h3",{id:"start-1"},(0,r.kt)("inlineCode",{parentName:"h3"},"start")),(0,r.kt)("p",null,"Start a sink instance."),(0,r.kt)("h4",{id:"usage-19"},"Usage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sinks start options\n\n")),(0,r.kt)("h4",{id:"options-15"},"Options"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Flag"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--instance-id")),(0,r.kt)("td",{parentName:"tr",align:null},"The sink instanceID.",(0,r.kt)("br",null),"If ",(0,r.kt)("inlineCode",{parentName:"td"},"instance-id")," is not provided, Pulsar starts all instances.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--name")),(0,r.kt)("td",{parentName:"tr",align:null},"The sink's name.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--namespace")),(0,r.kt)("td",{parentName:"tr",align:null},"The sink's namespace.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--tenant")),(0,r.kt)("td",{parentName:"tr",align:null},"The sink's tenant.")))),(0,r.kt)("h3",{id:"restart-1"},(0,r.kt)("inlineCode",{parentName:"h3"},"restart")),(0,r.kt)("p",null,"Restart a sink instance."),(0,r.kt)("h4",{id:"usage-20"},"Usage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sinks restart options\n\n")),(0,r.kt)("h4",{id:"options-16"},"Options"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Flag"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--instance-id")),(0,r.kt)("td",{parentName:"tr",align:null},"The sink instanceID.",(0,r.kt)("br",null),"If ",(0,r.kt)("inlineCode",{parentName:"td"},"instance-id")," is not provided, Pulsar restarts all instances.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--name")),(0,r.kt)("td",{parentName:"tr",align:null},"The sink's name.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--namespace")),(0,r.kt)("td",{parentName:"tr",align:null},"The sink's namespace.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--tenant")),(0,r.kt)("td",{parentName:"tr",align:null},"The sink's tenant.")))),(0,r.kt)("h3",{id:"localrun-1"},(0,r.kt)("inlineCode",{parentName:"h3"},"localrun")),(0,r.kt)("p",null,"Run a Pulsar IO sink connector locally rather than deploying it to the Pulsar cluster."),(0,r.kt)("h4",{id:"usage-21"},"Usage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sinks localrun options\n\n")),(0,r.kt)("h4",{id:"options-17"},"Options"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Flag"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-a"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"--archive")),(0,r.kt)("td",{parentName:"tr",align:null},"The path to the archive file for the sink. ",(0,r.kt)("br",null)," It also supports url-path (http/https/file ","[file protocol assumes that file already exists on worker host]",") from which worker can download the package.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--auto-ack")),(0,r.kt)("td",{parentName:"tr",align:null},"Whether or not the framework will automatically acknowledge messages.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--broker-service-url")),(0,r.kt)("td",{parentName:"tr",align:null},"The URL for the Pulsar broker.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--classname")),(0,r.kt)("td",{parentName:"tr",align:null},"The sink's class name if ",(0,r.kt)("inlineCode",{parentName:"td"},"archive")," is file-url-path (file://).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--client-auth-params")),(0,r.kt)("td",{parentName:"tr",align:null},"Client authentication parameter.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--client-auth-plugin")),(0,r.kt)("td",{parentName:"tr",align:null},"Client authentication plugin using which function-process can connect to broker.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--cpu")),(0,r.kt)("td",{parentName:"tr",align:null},"The CPU (in cores) that needs to be allocated per sink instance (applicable only to the Docker runtime).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--custom-schema-inputs")),(0,r.kt)("td",{parentName:"tr",align:null},"The map of input topics to Schema types or class names (as a JSON string).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--max-redeliver-count")),(0,r.kt)("td",{parentName:"tr",align:null},"Maximum number of times that a message is redelivered before being sent to the dead letter queue.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--dead-letter-topic")),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the dead letter topic where the failing messages are sent.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--custom-serde-inputs")),(0,r.kt)("td",{parentName:"tr",align:null},"The map of input topics to SerDe class names (as a JSON string).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--disk")),(0,r.kt)("td",{parentName:"tr",align:null},"The disk (in bytes) that needs to be allocated per sink instance (applicable only to the Docker runtime).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--hostname-verification-enabled")),(0,r.kt)("td",{parentName:"tr",align:null},"Enable hostname verification.",(0,r.kt)("br",null),(0,r.kt)("strong",{parentName:"td"},"Default value: false"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-i"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"--inputs")),(0,r.kt)("td",{parentName:"tr",align:null},"The sink's input topic or topics (multiple topics can be specified as a comma-separated list).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--name")),(0,r.kt)("td",{parentName:"tr",align:null},"The sink\u2019s name.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--namespace")),(0,r.kt)("td",{parentName:"tr",align:null},"The sink\u2019s namespace.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--parallelism")),(0,r.kt)("td",{parentName:"tr",align:null},"The sink\u2019s parallelism factor, that is, the number of sink instances to run).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--processing-guarantees")),(0,r.kt)("td",{parentName:"tr",align:null},"The processing guarantees (also known as delivery semantics) applied to the sink. The ",(0,r.kt)("inlineCode",{parentName:"td"},"--processing-guarantees")," implementation in Pulsar also relies on sink implementation. ",(0,r.kt)("br",null),"The available values are ATLEAST_ONCE, ATMOST_ONCE, EFFECTIVELY_ONCE.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--ram")),(0,r.kt)("td",{parentName:"tr",align:null},"The RAM (in bytes) that needs to be allocated per sink instance (applicable only to the Docker runtime).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--retain-ordering")),(0,r.kt)("td",{parentName:"tr",align:null},"Sink consumes and sinks messages in order.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--sink-config")),(0,r.kt)("td",{parentName:"tr",align:null},"sink config key/values.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--sink-config-file")),(0,r.kt)("td",{parentName:"tr",align:null},"The path to a YAML config file specifying the sink\u2019s configuration.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--sink-type")),(0,r.kt)("td",{parentName:"tr",align:null},"The sink's connector provider.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--subs-name")),(0,r.kt)("td",{parentName:"tr",align:null},"Pulsar source subscription name if user wants a specific subscription-name for input-topic consumer.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--tenant")),(0,r.kt)("td",{parentName:"tr",align:null},"The sink\u2019s tenant.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--timeout-ms")),(0,r.kt)("td",{parentName:"tr",align:null},"The message timeout in milliseconds.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--negative-ack-redelivery-delay-ms")),(0,r.kt)("td",{parentName:"tr",align:null},"The negatively-acknowledged message redelivery delay in milliseconds.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--tls-allow-insecure")),(0,r.kt)("td",{parentName:"tr",align:null},"Allow insecure tls connection.",(0,r.kt)("br",null),(0,r.kt)("strong",{parentName:"td"},"Default value: false"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--tls-trust-cert-path")),(0,r.kt)("td",{parentName:"tr",align:null},"The tls trust cert file path.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--topics-pattern")),(0,r.kt)("td",{parentName:"tr",align:null},"TopicsPattern to consume from list of topics under a namespace that match the pattern. ",(0,r.kt)("br",null),(0,r.kt)("inlineCode",{parentName:"td"},"--input")," and ",(0,r.kt)("inlineCode",{parentName:"td"},"--topics-Pattern")," are mutually exclusive. ",(0,r.kt)("br",null),"Add SerDe class name for a pattern in ",(0,r.kt)("inlineCode",{parentName:"td"},"--customSerdeInputs")," (supported for java fun only).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--use-tls")),(0,r.kt)("td",{parentName:"tr",align:null},"Use tls connection.",(0,r.kt)("br",null),(0,r.kt)("strong",{parentName:"td"},"Default value: false"),".")))),(0,r.kt)("h3",{id:"available-sinks"},(0,r.kt)("inlineCode",{parentName:"h3"},"available-sinks")),(0,r.kt)("p",null,"Get the list of Pulsar IO connector sinks supported by Pulsar cluster."),(0,r.kt)("h4",{id:"usage-22"},"Usage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sinks available-sinks\n\n")),(0,r.kt)("h3",{id:"reload-1"},(0,r.kt)("inlineCode",{parentName:"h3"},"reload")),(0,r.kt)("p",null,"Reload the available built-in connectors."),(0,r.kt)("h4",{id:"usage-23"},"Usage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sinks reload\n\n")))}u.isMDXComponent=!0}}]);