"use strict";(self.webpackChunkwebsite_next=self.webpackChunkwebsite_next||[]).push([[27891],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),u=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=u(n),m=r,k=d["".concat(p,".").concat(m)]||d[m]||s[m]||l;return n?a.createElement(k,o(o({ref:t},c),{},{components:n})):a.createElement(k,o({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=d;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var u=2;u<l;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},50061:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return p},metadata:function(){return u},toc:function(){return c},default:function(){return d}});var a=n(87462),r=n(63366),l=(n(67294),n(3905)),o=["components"],i={id:"io-netty",title:"Netty Tcp or Udp Connector",sidebar_label:"Netty Tcp or Udp Connector",original_id:"io-netty"},p=void 0,u={unversionedId:"io-netty",id:"version-2.4.1/io-netty",isDocsHomePage:!1,title:"Netty Tcp or Udp Connector",description:"Source",source:"@site/versioned_docs/version-2.4.1/io-netty.md",sourceDirName:".",slug:"/io-netty",permalink:"/docs/2.4.1/io-netty",editUrl:"https://github.com/apache/pulsar/edit/master/site2/website-next/versioned_docs/version-2.4.1/io-netty.md",tags:[],version:"2.4.1",frontMatter:{id:"io-netty",title:"Netty Tcp or Udp Connector",sidebar_label:"Netty Tcp or Udp Connector",original_id:"io-netty"}},c=[{value:"Source",id:"source",children:[{value:"Source Configuration Options",id:"source-configuration-options",children:[],level:3},{value:"Configuration Example",id:"configuration-example",children:[],level:3},{value:"Usage example",id:"usage-example",children:[{value:"Tcp example",id:"tcp-example",children:[],level:4},{value:"Http example",id:"http-example",children:[],level:4}],level:3}],level:2}],s={toc:c};function d(e){var t=e.components,n=(0,r.Z)(e,o);return(0,l.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"source"},"Source"),(0,l.kt)("p",null,"The Netty Source connector opens a port that accept incoming data via the configured network protocol and publish it to a user-defined Pulsar topic.\nAlso, this connector is suggested to be used in a containerized (e.g. k8s) deployment.\nOtherwise, if the connector is running in process or thread mode, the instances may be conflicting on listening to ports."),(0,l.kt)("h3",{id:"source-configuration-options"},"Source Configuration Options"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"type")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"false")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"tcp")),(0,l.kt)("td",{parentName:"tr",align:null},"The network protocol over which data is trasmitted to netty. Valid values include HTTP, TCP, and UDP")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"host")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"false")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"127.0.0.1")),(0,l.kt)("td",{parentName:"tr",align:null},"The host name or address that the source instance to listen on.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"port")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"false")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"10999")),(0,l.kt)("td",{parentName:"tr",align:null},"The port that the source instance to listen on.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"numberOfThreads")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"false")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"1")),(0,l.kt)("td",{parentName:"tr",align:null},"The number of threads of Netty Tcp Server to accept incoming connections and handle the traffic of the accepted connections.")))),(0,l.kt)("h3",{id:"configuration-example"},"Configuration Example"),(0,l.kt)("p",null,"Here is a configuration Json example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-$json"},'\n{\n    "type": "tcp",\n    "host": "127.0.0.1",\n    "port": "10911",\n    "numberOfThreads": "5"\n}\n\n')),(0,l.kt)("p",null,"Here is a configuration Yaml example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-$yaml"},'\nconfigs:\n    type: "tcp"\n    host: "127.0.0.1"\n    port: 10999\n    numberOfThreads: 1\n\n')),(0,l.kt)("h3",{id:"usage-example"},"Usage example"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Start pulsar standalone")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-$bash"},"\ndocker pull apachepulsar/pulsar:2.4.0\ndocker run -d -it -p 6650:6650 -p 8080:8080 -v $PWD/data:/pulsar/data --name pulsar-netty-standalone apachepulsar/pulsar:2.4.0 bin/pulsar standalone\n\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Start pulsar-io in standalone")),(0,l.kt)("h4",{id:"tcp-example"},"Tcp example"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Config file netty-source-config.yaml")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-$yaml"},'\nconfigs:\n    type: "tcp"\n    host: "127.0.0.1"\n    port: 10999\n    numberOfThreads: 1\n\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Copy configuration file to pulsar server")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-$bash"},"\ndocker cp netty-source-config.yaml pulsar-netty-standalone:/pulsar/conf/\n\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Download netty connector and start netty connector")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-$bash"},"\ndocker exec -it pulsar-netty-standalone /bin/bash\ncurl -O http://mirror-hk.koddos.net/apache/pulsar/pulsar-2.4.0/connectors/pulsar-io-netty-2.4.0.nar\n./bin/pulsar-admin sources localrun --archive pulsar-io-2.4.1.nar --tenant public --namespace default --name netty --destination-topic-name netty-topic --source-config-file netty-source-config.yaml --parallelism 1\n\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Consume data ")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-$bash"},"\ndocker exec -it pulsar-netty-standalone /bin/bash\n./bin/pulsar-client consume -t Exclusive -s netty-sub netty-topic -n 0\n\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Open another window for send data to netty source")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-$bash"},"\ndocker exec -it pulsar-netty-standalone /bin/bash\napt-get update\napt-get -y install telnet\nroot@1d19327b2c67:/pulsar# telnet 127.0.0.1 10999\nTrying 127.0.0.1...\nConnected to 127.0.0.1.\nEscape character is '^]'.\nhello\nworld\n\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Verification results")),(0,l.kt)("p",null,"In the consumer window just opened, you can see the following data"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"\n----- got message -----\nhello\n\n----- got message -----\nworld\n\n")),(0,l.kt)("h4",{id:"http-example"},"Http example"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Config file netty-source-config.yaml")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-$yaml"},'\nconfigs:\n    type: "http"\n    host: "127.0.0.1"\n    port: 10999\n    numberOfThreads: 1\n\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Start netty source")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-$bash"},"\ndocker exec -it pulsar-netty-standalone /bin/bash\n./bin/pulsar-admin sources localrun --archive pulsar-io-2.4.1.nar --tenant public --namespace default --name netty --destination-topic-name netty-topic --source-config-file netty-source-config.yaml --parallelism 1\n\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Verification results")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"\ncurl -X POST --data 'hello, world!' http://127.0.0.1:10999/\n\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Verification results")),(0,l.kt)("p",null,"In the consumer window just opened, you can see the following data"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"\n----- got message -----\nhello, world!\n\n")))}d.isMDXComponent=!0}}]);